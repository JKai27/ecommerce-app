# application-dev.properties - Development profile with Docker services
# Use this when all Docker services are running
# Activate with: spring.profiles.active=dev

# Enhanced logging for development
logging.level.root=INFO
logging.level.shopeazy.com.ecommerce_app=DEBUG
logging.level.org.springframework.kafka=DEBUG
logging.level.org.springframework.mail=DEBUG

# All external services expected to be running via Docker
spring.data.mongodb.uri=mongodb://mongo-admin:mongo%40admin@localhost:27017/ecommerce-app?authSource=admin
spring.data.redis.host=localhost
spring.data.redis.port=6379

# Kafka Configuration - Full featured
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=ecommerce-order-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Email Configuration - MailHog for testing
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# Development-specific settings
app.features.kafka.enabled=true
app.features.email.enabled=true
app.features.redis.enabled=true

# Exclude Spring Boot's auto-configuration to use our custom conditional configs
spring.autoconfigure.exclude=\
  org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration