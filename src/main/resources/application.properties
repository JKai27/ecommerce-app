spring.application.name=E-CommerceApp

# Mongo config
spring.data.mongodb.uri=mongodb://mongo-admin:mongo%40admin@localhost:27017/ecommerce-app?authSource=admin
logging.level.org.springframework.data.mongodb.core=DEBUG

# Token durations
jwt.expiration=3600000
jwt.refresh-expiration=86400000

# JWT TOKEN
jwt.secret=+axZc8nxT7i9SXs7qJGk3GNIYQ42+AG1FSy0mxQ8kTo=
JWT_ACCESS_COOKIE_NAME=access_token
JWT_REFRESH_COOKIE_NAME=refresh_token

# redis config
spring.data.redis.host=localhost
spring.data.redis.port=6379

# Set max file size to 5MB
spring.servlet.multipart.max-file-size=5MB

# Set max request size to 5MB (this includes file size and any other form data)
spring.servlet.multipart.max-request-size=5MB

# for better debugging
spring.mvc.hiddenmethod.filter.enabled=true

# more flexibility while sending request DTOs
spring.jackson.mapper.accept-case-insensitive-enums=true

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=ecommerce-order-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Email Configuration (MailHog for testing)
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# Application settings
app.order.reservation-timeout-minutes=30
app.email.from=noreply@shopeazy.com
