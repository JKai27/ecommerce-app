<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="shopeazy.com.ecommerceapp.ECommerceAppApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2025-06-16T08:30:09.453Z" hostname="m283.local" time="0.4">
  <properties/>
  <testcase name="contextLoads()" classname="shopeazy.com.ecommerceapp.ECommerceAppApplicationTests" time="0.4"/>
  <system-out><![CDATA[10:30:07.745 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [shopeazy.com.ecommerceapp.ECommerceAppApplicationTests]: ECommerceAppApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
10:30:07.796 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration shopeazy.com.ecommerceapp.ECommerceAppApplication for test class shopeazy.com.ecommerceapp.ECommerceAppApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-06-16T10:30:07.962+02:00  WARN 75319 --- [E-CommerceApp] [    Test worker] ory$DuplicateJsonObjectContextCustomizer : 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/kailassargar/.gradle/caches/modules-2/files-2.1/org.json/json/20240303/ebb88e8fb5122b7506d5cf1d69f1ccdb790d22a/json-20240303.jar!/org/json/JSONObject.class
	jar:file:/Users/kailassargar/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-06-16T10:30:07.969+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] s.c.e.ECommerceAppApplicationTests       : Starting ECommerceAppApplicationTests using Java 17.0.12 with PID 75319 (started by kailassargar in /Users/kailassargar/ecommerce-app/backend)
2025-06-16T10:30:07.969+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] s.c.e.ECommerceAppApplicationTests       : No active profile set, falling back to 1 default profile: "default"
2025-06-16T10:30:08.296+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-16T10:30:08.297+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-06-16T10:30:08.362+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 62 ms. Found 6 MongoDB repository interfaces.
2025-06-16T10:30:08.370+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-16T10:30:08.371+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-16T10:30:08.379+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface shopeazy.com.ecommerceapp.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-16T10:30:08.380+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface shopeazy.com.ecommerceapp.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-16T10:30:08.380+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface shopeazy.com.ecommerceapp.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-16T10:30:08.380+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface shopeazy.com.ecommerceapp.repository.SellerProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-16T10:30:08.380+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface shopeazy.com.ecommerceapp.repository.UserRefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-16T10:30:08.380+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface shopeazy.com.ecommerceapp.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-16T10:30:08.380+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-06-16T10:30:08.597+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "15.3.2"}, "platform": "Java/Oracle Corporation/17.0.12+8-LTS-286"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mongo-admin', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6615237, com.mongodb.Jep395RecordCodecProvider@eaf8427, com.mongodb.KotlinCodecProvider@4bf4680c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-06-16T10:30:08.607+02:00  INFO 75319 --- [E-CommerceApp] [localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7355584, minRoundTripTimeNanos=0}
2025-06-16T10:30:08.965+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-16T10:30:09.345+02:00  INFO 75319 --- [E-CommerceApp] [    Test worker] s.c.e.ECommerceAppApplicationTests       : Started ECommerceAppApplicationTests in 1.485 seconds (process running for 1.974)
2025-06-16T10:30:09.359+02:00 DEBUG 75319 --- [E-CommerceApp] [    Test worker] o.s.data.mongodb.core.MongoTemplate      : Executing count: { "email" : "admin@admin.com"} in collection: users
Admin user already exists.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
